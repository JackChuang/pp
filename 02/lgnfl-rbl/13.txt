1. Mutual exclusion

Prova por indução:

  Caso base: Árvore com duas folhas e um nó raiz (altura = 2). Neste caso é trivial porque se
  comporta exatamente como um único Peterson lock e, como já foi demonstrado no livro, ele provê
  exclusão mútua.

  Passo indutivo: Árvore com altura K (onde K > 2). Cada uma das threads localizadas nas folhas
  tentará adquirir o Peterson lock do nó pai, enquanto as threads que não conseguirem ficarão
  aguardando no nível inferior até a liberação do lock do pai, visto que um único Peterson lock
  provê exclusão mútua. Neste momento, podemos isolar o caso da árvore com altura K-1 das threads
  que sucederam na aquisição dos locks iniciais. Seguindo essa recorrência, quando K = 2, chegamos
  ao caso base, que provê exclusão mútua. Logo, as árvores inferiores também provêem exclusão mútua.

2. Freedom from deadlock

  Segue uma prova por indução similar à primeira pergunta: como para cada nó intermediário da 
  árvore foi provado que é livre de deadlock, então a árvore inteira composta também é: uma das 
  threads que tentar pegar um lock do nó pai conseguirá e isso permitirá que pelo uma única thread 
  consiga chegar até a raiz, adquirindo todos os locks no caminho.

3. Freedom from starvation

  Similarmente ao item 2, a prova também segue de Peterson lock, que é livre de starvation. Cada
  thread que tentar adquirir um lock do nó pai eventualmente conseguirá e isso implica que
  eventualmente todas as threads conseguirão em algum momento todos os locks até a raiz.


O upperbound do número de vezes que a árvore-lock pode ser adquirida e liberada completamente
entre o tempo em que uma thread começa a adquirir a árvore-lock e o tempo em que ela sucede
parece ser N, onde N é o número de folhas/threads. Por exemplo:

     ()
   /    \
  ()    ()
 /  \  /  \
()  ()()  ()
4   2  3   1

Se olharmos para a folha última colocada, podemos imaginar a seguinte situação: inicialmente,
a thread 1 conseguiu (por sorte) pegar todos os locks até a raiz. Enquanto a thread 2 conseguiu
quase todos exceto a raiz. E as threads 3 e 4 ficaram aguardando os pais serem liberados. Quando
a thread 1 liberou todos os locks, a thread 3 pode ter adquirido o nó pai imediatamente, mas não
conseguiu obter imeditametne a raiz, pois a thread 2 já estava aguardando por ela. Assim, a thread
2 consegue todos até a raiz e a thread 3 fica aguardando sua liberação. Quando a thread 2 libera
todos os locks adquiridos, a thread 4 consegue finalmente avançar, mas fica aguardando a raiz ser
liberada pela thread 3, que adquiriu sua trava assim que a thread 2 liberou. Finalmente, a thread
4 consegue o lock da raiz quando a thread 3 termina. Dessa forma, é possível ver que a thread
focada (thread 4) observou 4 operações de lock e unlock da árvore até terminar. Daí a generlização
para N, onde N é o número de folhas.