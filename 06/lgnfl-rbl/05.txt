Não houve muita diferença de tempo em execução, mas em geral, aumentando o número de buckets tornou-se ligeiramente mais lento.
Mesmo usando uma synchronized deque o valor ficou aproximadamente o mesmo.

==============================================
hash queue com apenas 2 locks: 1 head e 1 tail
==============================================

>>> a = 0.580 + 0.579 + 0.583 + 0.576 + 0.579 (2 buckets)
avg: 0.579

>>> b = 0.580 + 0.581 + 0.586 + 0.575 + 0.576 (16 buckets)
avg: 0.5796

>>> c = 0.581 + 0.579 + 0.581 + 0.579 + 0.575 (32 buckets)
avg: 0.579

>>> d = 0.577 + 0.581 + 0.590 + 0.582 + 0.584 (64 buckets)
avg: 0.585

=============================================
hash queue com apenas 1 lock para head e tail
=============================================

>>> aaa = 0.575 + 0.580 + 0.582 + 0.578 + 0.580 (2 buckets, 1 lock)
avg: 0.579

>>> bbb = 0.585 + 0.580 + 0.584 + 0.577 + 0.578 (16 buckets, 1 lock)
avg: 0.580

>>> ccc = 0.583 + 0.594 + 0.578 + 0.588 + 0.583 (32 buckets, 1 lock)
avg: 0.585

>>> ddd = 0.581 + 0.575 + 0.578 + 0.584 + 0.581 (64 buckets, 1 lock)
avg: 0.579


==================
synchronized deque
==================

>>> e = 0.588 + 0.581 + 0.580 + 0.589 + 0.586 (deque + mutex)
avg: 0.584

