Silas Garrido - sgtcs@cin.ufpe.br
Hernandes Maciel - hms@cin.ufpe.br

1. Um programa sequencial pode ser definido como uma série de passos que serão executados um após o outro. Já no programa concorrente, uma das formas de exemplificar, é quando um programa é divido em vários pedaços (de programas sequenciais) e estes são executados simultaneamente disputando um determinado recurso. De forma análoga, a concorrência pode ser vista como um caixa de supermercado atendendo a vários clientes ao mesmo tempo: a cada momento uma pequena parcela das compras de cada um é registrada. Já na programação paralela, utilizando um processador multicore, por exemplo, esses vários pedaços do programa podem ser executados paralelamente pelos diferentes núcleos. Com isso, obtém-se um ganho de performance. Utilizando novamente o exemplo do caixa do supermercado, no contexto do paralelismo, cada um dos clientes serão atendidos por diferentes caixas. Por fim, um programa distribuído caracteriza-se pelo fato dos vários pedaços serem executados em diferentes máquinas, podendo estar em diferentes localizações, porém, interconectadas.

2. Sim. Para fins experimentais houve a necessidade de executar diferentes classificadores, da área de aprendizagem de máquina, considerando diferentes cenários (base de dados diferentes). Como eram bases grandes e que demandavam bastante tempo para convergência, rodar todos os métodos sequencialmente tornaria a tarefa extremamente custosa em termos de tempo de execução. Como alternativa para melhorar essa métrica e, levando em consideração a quantidade de núcleos do processador (quatro), optamos por executar paralelamente cada um desses métodos. Como um método não dependia do outro, não existiu a necessidade de sincronização, logo, era um programa "embaraçosamente" paralelo. Além disso, como era uma situação simples, não houveram grandes problemas na sua elaboração.
