Universidade Federal de Pernambuco
Centro de Informática
Mestrado em Ciência da Computação
IN0984

Aluno: Larissa Catão Tenório Falcão

Trabalho 01

1- 
Frequência de clock: 2,9 GHz e a frequência máxima é de 3.6 GHz.

Número de núcleos (físicos e virtuais) do processador: 2 núcleos físicos e 4 núcleos virtuais.

Número de níveis de cache e onde as memórias cache estão localizadas: 3 níveis (L1, L2 e L3), L1 e L2 em cada um dos núcleos e L3 compartilhada entre eles.

Como o processador mantém coerência das memórias cache? Utiliza uma versão modificada do protocolo MESI com a introdução de um novo estado F (forward), este protocolo é chamado de MESIF.

As instruções atômicas não-triviais (por exemplo, um LOAD ou um STOR são instruções “triviais" por fazerem apenas uma coisa) que estão disponíveis e o que elas fazem.
Algumas instruções encontradas (O sinal LOCK# após as seguintes instruções, as torna instruções atômicas):
	ADD- Adiciona o operando destino (primeiro operando) e do operando fonte (segundo operando) e, em seguida, armazena o resultado no operando destino.
	ADC- Adiciona o operando destino (primeiro operando), o operando fonte (segundo operando), e os de transporte de flag (CF) e armazena o resultado no operando destino.
	AND- Executa um bit a bit a operação AND nos operandos destino (primeiro) e fonte (segundo) e armazena o resultado no local de destino.
	
Outras: BTC, BTR, BTS, CMPXCHG, CMPXCH8B,CMPXCHG16B, DEC, INC, NEG, NOT, OR, SBB, SUB,XOR, XADD, and XCHG.


A velocidade da memória que está rodando na sua máquina. Ela é rápida o suficiente para o processador? Sim? Não? Por que?
Não é possível afirmar com certeza uma das duas alternativas porque depende de vários aspectos como por exemplo, velocidade do barramento, velocidade do processador, velocidade da memória e entre outros.


2- Você já precisou construir programas paralelos, seja por motivos de estudo, seja por motivos profissionais? Escolha o mais complexo desses programas e descreva-o. Explique porque ele precisa realizar varias atividades ao mesmo tempo e em que consistiam essas atividades. Esse programa era “embaraçosamente” paralelo ou exigia sincronização entre as tarefas? Que problemas você enfrentou ao construi-lo (ou ajudar a construi-lo)?
	Sim. O problema consistiu em implementar um código que demonstrava a relação produtor/consumidor em Java com buffer compartilhado, a classe produtor gerava dados e os armazenava para a classe consumidor ler os dados do buffer compartilhado. Ele precisa realizar várias atividades ao mesmo tempo para que não fosse necessário realizar apenas uma atividade por vez, armazenando dados através de múltiplas threads.
O programa era “embaraçosamente” paralelo e não exigia sincronização. Problemas: Não permitir que haja dados perdidos e dados duplicados durante a execução das classes Produtor e Consumidor.
